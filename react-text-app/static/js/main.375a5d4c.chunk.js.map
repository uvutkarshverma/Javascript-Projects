{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","id","myStyle","type","Navbar","Link","to","title","href","role","value","onChange","event","console","log","newcolor","target","onClick","mode","for","modeText","TextForm","useState","text","setText","heading","rows","placeholder","toUpperCase","showAlert","toLowerCase","download","textFile","data","Blob","window","URL","revokeObjectURL","createObjectURL","saveFile","split","length","toFixed","defaultProps","Alert","alert","App","mystyle","setMyStyle","setmodeText","setAlert","showMessage","message","msg","setTimeout","mColor","setmColor","basename","document","body","style","backgroundColor","color","color1","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wKAEe,SAASA,EAAMC,GAAQ,IAAD,EAEjC,OACI,qBAAKC,UAAU,kBAAf,SACA,sBAAKA,UAAU,YAAf,UAEI,0CACA,sBAAKC,GAAG,mBAAmBD,UAAS,aAApC,UACV,sBAAKA,UAAS,4BAAuBD,EAAMG,SAA3C,UACE,uBAAIF,UAAU,mBAAmBC,GAAG,cAApC,qEACE,wBAASD,UAAU,mBAAmBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA/I,gCADF,IAKA,qBAAKF,GAAG,cAAcD,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,qXAC6a,mDAD7a,uDAMJ,sBAAKA,UAAS,4BAAuBD,EAAMG,SAA3C,UACE,oBAAIF,UAAU,mBAAmBC,GAAG,aAApC,SACE,wBAASD,UAAU,6BAA6BG,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAA1J,iCAIF,qBAAKF,GAAG,cAAcD,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAA1G,SACE,sBAAKA,UAAU,iBAAf,UACE,+EADF,sXAC+a,mDAD/a,uDAKJ,sBAAKA,UAAS,4BAAuBD,EAAMG,SAA3C,UACE,oBAAIF,UAAU,mBAAmBC,GAAG,eAApC,SACE,wBAAQD,UAAU,6BAA6BG,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAA3J,iCAIF,qBAAKF,GAAG,gBAAgBD,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,sXAC8a,mDAD9a,+D,YCvCS,SAASI,EAAOL,GAK3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAMG,QAA1C,eAAwDH,EAAMG,SAA5E,SACN,sBAAKF,UAAU,kBAAf,UACE,cAACK,EAAA,EAAD,CAAML,UAAU,eAAeM,GAAG,IAAlC,SAAuCP,EAAMQ,QAC7C,wBAAQP,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAGlB,sBAAKA,UAAU,2BAA2BC,GAAG,yBAA7C,UACE,qBAAID,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAACK,EAAA,EAAD,CAAML,UAAU,kBAAkB,eAAa,OAAOM,GAAG,IAAzD,oBAEF,oBAAIN,UAAU,WAAd,SACE,cAACK,EAAA,EAAD,CAAML,UAAU,WAAWM,GAAG,SAA9B,qBAEF,qBAAIN,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BQ,KAAK,IAAIP,GAAG,iBAAiBQ,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAA3H,sBAGA,qBAAIT,UAAU,gBAAgB,kBAAgB,iBAA9C,UACE,6BAAI,mBAAGA,UAAU,gBAAgBQ,KAAK,IAAlC,sBACJ,6BAAI,mBAAGR,UAAU,gBAAgBQ,KAAK,IAAlC,8BACJ,6BAAI,oBAAIR,UAAU,uBAClB,6BAAI,mBAAGA,UAAU,gBAAgBQ,KAAK,IAAlC,yCAGR,oBAAIR,UAAU,WAAd,SACE,mBAAGQ,KAAK,IAAIR,UAAU,oBAAtB,2BAGJ,uBAAOG,KAAK,QAAQO,MAAM,GAAGC,SAnChB,SAACC,GAChBC,QAAQC,IAAI,gBACZf,EAAMgB,SAASH,EAAMI,OAAON,UAkC1B,sBAAKV,UAAU,yBAAf,UACJ,uBAAOA,UAAU,oBAAoBiB,QAASlB,EAAMmB,KAAMf,KAAK,WAAWM,KAAK,SAASR,GAAG,2BAC3F,uBAAOD,UAAS,gCAA6C,UAAlBD,EAAMG,QAAoB,OAAO,SAAWiB,IAAI,yBAA3F,SAAqHpB,EAAMqB,sBCzC9G,SAASC,EAAStB,GAC7B,IAmBA,EAAwBuB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OACI,2CAAK,sBAAKxB,UAAU,YAAf,UACD,qBAAIA,UAAU,mBAAd,UAAkCD,EAAM0B,QAAxC,SACA,mBAAGzB,UAAU,qBACb,qBAAKA,UAAU,OAAf,SAEI,0BAAUA,UAAS,0BAAqBD,EAAMG,QAA3B,iBAA6D,SAAlBH,EAAMG,QAAmB,QAAQ,QAAUD,GAAG,8BAA8ByB,KAAK,KAAKC,YAAY,kBAAkBjB,MAAOa,EAAMZ,SArB1L,SAACC,GACdC,QAAQC,IAAI,gBACZU,EAAQZ,EAAMI,OAAON,YAsBjB,wBAAQV,UAAU,kBAAkBiB,QAvC1B,WACdJ,QAAQC,IAAI,6BACZU,EAAQD,EAAKK,eACb7B,EAAM8B,UAAU,yBAAyB,YAoCrC,kCACA,wBAAQ7B,UAAU,uBAAuBiB,QAnC7B,WAChBJ,QAAQC,IAAI,6BACZU,EAAQD,EAAKO,eACb/B,EAAM8B,UAAU,yBAAyB,YAgCrC,kCACA,wBAAQ7B,UAAU,4BAA4BiB,QA/BxC,WACVJ,QAAQC,IAAI,WACZU,EAAQ,IACRzB,EAAM8B,UAAU,sBAAsB,YA4BlC,wBAEA,mBAAGE,SAAS,WAAWvB,KAvB/B,WACI,IAAIwB,EAAW,KACXC,EAAO,IAAIC,KAAK,CAACX,GAAO,CAACpB,KAAM,eAMnC,OALiB,OAAb6B,GACAG,OAAOC,IAAIC,gBAAgBL,GAE/BA,EAAWG,OAAOC,IAAIE,gBAAgBL,GAiBLM,GAAYvC,UAAU,sCAAnD,0BAEA,sBAAKA,UAAU,iBAAf,UACI,yCACA,iDAAoBuB,EAAKiB,MAAM,KAAKC,OAAS,EAA7C,cAA2DlB,EAAKkB,OAAhE,kBACA,6DAAgC,IAAOlB,EAAKiB,MAAM,KAAKC,OAAOC,QAAQ,GAAtE,cACA,yCACA,4BAAa,KAATnB,EAAY,oCAAoCA,UDDpEnB,EAAOuC,aAAe,CAClBpC,MAAO,kBExCIqC,MAVf,SAAe7C,GAEX,OACIA,EAAM8C,OAAS,sBAAK7C,UAAS,mDAA+D,UAAjBD,EAAMG,QAAmB,OAAO,SAAWO,KAAK,QAA5G,UAAoH,mCAASV,EAAM8C,MAAM1C,KAArB,SACxIJ,EAAM8C,MAAN,Q,wBC2EYC,MAnEf,WACE,MAA8BxB,mBAAS,SAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KACA,EAA8B1B,mBAAS,oBAAvC,mBAAKF,EAAL,KAAe6B,EAAf,KACA,EAAwB3B,mBAAS,IAAjC,mBAAKuB,EAAL,KAAYK,EAAZ,KACIC,EAAc,SAACC,EAASjD,GAC1B+C,EAAS,CACPG,IAAKD,EACLjD,KAAMA,IAERmD,YAAW,WACTJ,EAAS,QACR,MAmBL,EAA0B5B,mBAAS,QAAnC,mBAAKiC,EAAL,KAAaC,EAAb,KAOA,OACE,mCACD,cAAC,IAAD,CAAQC,SAAU,6BAAlB,SAAgD,gCAC1C,cAACrD,EAAD,CAAQc,KA3BJ,WACTL,QAAQC,IAAI,gBACI,UAAZiC,GACFC,EAAW,QACXC,EAAY,qBACZS,SAASC,KAAKC,MAAMC,gBAAkB,QACtCH,SAASC,KAAKC,MAAME,MAAQ,QAC5BX,EAAY,8BAA+B,aAE3CH,EAAW,SACXC,EAAY,oBACZS,SAASC,KAAKC,MAAMC,gBAAkB,QACtCH,SAASC,KAAKC,MAAME,MAAQ,QAC5BX,EAAY,+BAAgC,aAcrBjD,QAAS6C,EAAS3B,SAAUA,EAAUb,MAAM,sBAAsBQ,SAT9E,SAACgD,GACdP,EAAUO,GACVL,SAASC,KAAKC,MAAMC,gBAAkBN,EACtCG,SAASC,KAAKC,MAAME,MAAQ,WAOxB,cAAC,EAAD,CAAOjB,MAAOA,EAAO3C,QAAS6C,IAI5B,eAACiB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAACrE,EAAD,CAAOI,QAAS6C,MAIlB,cAACkB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACG,cAAC9C,EAAD,CAAUI,QAAQ,uBAAuBvB,QAAS6C,EAASlB,UAAWsB,SAbhC,YCzCpCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAOFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.375a5d4c.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className=\"container\" >\r\n\r\n            <h1>About us</h1>\r\n            <div id=\"accordionExample\" className={`accordion `}>\r\n  <div className={`accordion-item bg-${props.myStyle}`}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\" className={`accordion-item`}>\r\n      <button  className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" >\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className={`accordion-item bg-${props.myStyle}`}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button  className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" >\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className={`accordion-item bg-${props.myStyle}`}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" >\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  const onChange = (event) => {\r\n    console.log(\"text changes\")\r\n    props.newcolor(event.target.value);\r\n}\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.myStyle} bg-${props.myStyle}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a href='/' className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <input type=\"color\" value=\"\" onChange={onChange}/>\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input \" onClick={props.mode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.myStyle === \"light\"?\"dark\":\"light\"}`} for=\"flexSwitchCheckDefault\">{props.modeText}</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title:PropTypes.string.isRequired};\r\nNavbar.defaultProps = {\r\n    title: \"add title here\",\r\n}","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n    const Clickedup = () => {\r\n        console.log(\":button clicked to change\");\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to UpperCase\",\"Success\")\r\n    }\r\n    const Clickeddown = () => {\r\n        console.log(\":button clicked to change\");\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to LowerCase\",\"Success\")\r\n    }\r\n    const clear = () => {\r\n        console.log(\"cleared\");\r\n        setText(\"\");\r\n        props.showAlert(\"All Text is Cleared\",\"Warning\")\r\n    }\r\n    const onChange = (event) => {\r\n        console.log(\"text changes\")\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    function saveFile() {\r\n        var textFile = null;\r\n        var data = new Blob([text], {type: 'text/plain'}); \r\n        if (textFile !== null) {  \r\n            window.URL.revokeObjectURL(textFile);  \r\n        }  \r\n        textFile = window.URL.createObjectURL(data);  \r\n       \r\n        return textFile; \r\n    }\r\n    return (\r\n        <>   <div className=\"container\">\r\n            <h1 className=\"text-center my-3\">{props.heading} - </h1>\r\n            <p className=\"text-center my-3\"></p>\r\n            <div className=\"mb-3\">\r\n\r\n                <textarea className={`form-control bg-${props.myStyle} text-${props.myStyle === \"dark\"?\"light\":\"dark\"}`} id=\"exampleFormControlTextarea1\" rows=\"10\" placeholder='Enter Text Here' value={text} onChange={onChange}></textarea>\r\n\r\n            </div>\r\n            <button className=\"btn btn-success\" onClick={Clickedup}>Convert To uppercase</button>\r\n            <button className=\"btn btn-success mx-3\" onClick={Clickeddown}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-danger text-white\" onClick={clear}>Clear Text</button>\r\n\r\n            <a download=\"file.txt\" href={saveFile()} className=\"btn btn-danger my-2 mx-2 text-white\" >Save file</a>\r\n        </div>\r\n            <div className=\"container my-4\">\r\n                <h1>Summary</h1>\r\n                <p>There are total {text.split(\" \").length - 1} Words and {text.length} characters.</p>\r\n                <p>And average reading time is {0.08 * text.split(\" \").length.toFixed(3)} Minutes</p>\r\n                <h2>Preview</h2>\r\n                <p>{text === \"\"?\"please write some text to preview\":text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  \r\n    return (\r\n        props.alert && <div className={`alert alert-dismissible fade show  alert-${props.myStyle ===\"light\"?\"dark\":\"light\"}`} role=\"alert\"><strong>{props.alert.type} : </strong>\r\n  {props.alert[\"msg\"]}\r\n \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from 'react'\nimport Alert from \"./components/Alert\";\n/* import { render } from \"react-dom\"; */\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mystyle, setMyStyle] = useState(\"light\");\n  let [modeText, setmodeText] = useState(\"Enable Dark Mode\");\n  let [alert, setAlert] = useState(\"\");\n  let showMessage = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  let mode = () => {\n    console.log(\"mode clicked\");\n    if (mystyle === \"light\") {\n      setMyStyle(\"dark\")\n      setmodeText(\"Enable light mode\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showMessage(\"Dark Mode has been enabled \", \"warning\")\n    } else {\n      setMyStyle(\"light\")\n      setmodeText(\"Enable dark mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showMessage(\"Dark Mode has been disabled \", \"success\")\n\n    }\n  }\n  let [mColor, setmColor] = useState(\"#fff\")\n  let newcolor = (color1) => {\n    setmColor(color1);\n    document.body.style.backgroundColor = mColor;\n    document.body.style.color = \"white\";\n  }\n\n  return (\n    <>\n   <Router basename={'/javascript/react-text-app'}><div>\n        {<Navbar mode={mode} myStyle={mystyle} modeText={modeText} title=\"WordCounter Web App\" newcolor={newcolor} />}\n        <Alert alert={alert} myStyle={mystyle} />\n\n\n     \n          <Switch>\n          <Route exact path=\"/about\">\n            <About myStyle={mystyle} />\n\n          </Route>\n\n          <Route exact path=\"/\">\n            {<TextForm heading=\"Enter The Text Below\" myStyle={mystyle} showAlert={showMessage} />}\n\n          </Route>\n         </Switch> </div>\n     \n\n       </Router>\n\n</>\n\n  );\n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App2 from './App';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  \n\n  </React.StrictMode>,\n \n    \n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}